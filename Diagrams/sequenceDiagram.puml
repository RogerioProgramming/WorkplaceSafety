@startuml

actor User
participant "Flask Server" as Flask
participant "DataManager" as DM
participant "JSONDataSource" as DS
participant "instances.json" as Instances
participant "Observer" as Observer
participant "LoggerObserver" as Logger
participant "ReportGeneratorObserver" as ReportGen

User -> Flask : POST /deploy-atividade
Flask -> Flask : Recebe dados (JSON)
Flask -> DM : Verifica se instância do DataManager existe
alt Instância não existe
    DM -> DM : Cria instância (Singleton)
end
Flask -> DM : Chama método load_instances()
DM -> DS : Chama método load_instances()
DS -> Instances : Abre e lê instances.json
Instances -> DS : Retorna dados das instâncias
DS -> DM : Retorna instâncias
Flask -> DM : Chama método save_instances(instances)
DM -> DS : Chama método save_instances(instances)
DS -> Instances : Abre e escreve em instances.json
Instances -> DS : Confirma escrita
DS -> DM : Confirma gravação
DM -> Observer : Notifica observadores ("save_instances", instances)
Observer -> Logger : LoggerObserver.update("save_instances", instances)
Observer -> ReportGen : ReportGeneratorObserver.update("save_instances", instances)
Logger -> Logger : Exibe log do evento
ReportGen -> ReportGen : Gera relatório de instâncias
Flask -> User : Retorna URL da atividade

@enduml
